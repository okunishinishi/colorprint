/**
 * Colorpint context.
 * @memberof module:colorprint/lib
 * @inner
 * @constructor Colorprint
 * @param {object} config - Context configuration.
 */

"use strict";

var formatMsg = require('./msg/format_msg'),
    decorateMsg = require('./msg/decorate_msg'),
    indentMsg = require('./msg/indent_msg'),
    extend = require('extend');

/** @lends module:colorprint/lib~Colorprint */
function Colorprint() {
    var s = this;
    s.init.apply(s, arguments);
}

Colorprint.prototype = {
    disabled: false,
    prepareMsg: function () {
        var s = this;
        var msg = formatMsg.apply(formatMsg, arguments);
        return [s.PREFIX, indentMsg(msg, s.indent), s.SUFFIX].join('');
    },
    writeToStdout: function (msg, color) {
        var s = this;
        if(s.disabled) {
            return;
        }
        console.log(decorateMsg(msg, color));
    },
    writeToStderr: function (msg, color) {
        console.error(decorateMsg(msg, color));
    },
{{#each levels}}
    /** Color for {{lowercase @key}} print. */
    {{uppercase @key}}_COLOR: '{{color}}',
{{/each}}
{{#each levels}}
    /** Alias for module:colorprint/lib~Colorprint#{{lowercase @key}}. */
    {{uppercase @key}}: function () {
        var s = this;
        s.{{lowercase @key}}.apply(s, arguments);
    },
{{/each}}
    /** @constructs module:colorprint/lib~Colorprint */
    init: function (config) {
        var s = this;
        extend(s, config);
    },
    /** Number of indent */
    indent: 0,
    /** Message prefix */
    PREFIX: '',
    /** Message suffix */
    SUFFIX: '',
{{#each levels}}
    /**
     * Print {{lowercase @key}} message.
     * @param {...string} msg - Message to print.
     */
    {{lowercase @key}}: function (msg) {
        var s = this;
        s.{{#if error}}writeToStderr{{else}}writeToStdout{{/if}}(s.prepareMsg.apply(s, arguments), s.{{uppercase @key}}_COLOR);
    }{{#if @last}}{{else}},{{/if}}
{{/each}}
};


module.exports = Colorprint;
