/**
 * Colorpint context.
 * @memberof module:colorprint/lib
 * @inner
 * @constructor Colorprint
 * @param {object} config - Context configuration.
 */

"use strict";

var ext = require('./ext'),
    formatMsg = require('./format_msg'),
    decorateMsg = require('./decorate_msg'),
    extend = ext.extend;

/** @lends Colorprint */
function Colorprint() {
    var s = this;
    s.init.apply(s, arguments);
}

Colorprint.prototype = {
    _format: function () {
        var s = this;
        var msg = formatMsg.apply(formatMsg, arguments);
        return [s.prefix, msg, s.suffix].join('');
    },
    _printLog: function (msg, color) {
        console.log(decorateMsg(msg, color));
    },
    _printError: function (msg, color) {
        console.error(decorateMsg(msg, color));
    },
    /** @constructs Colorprint */
    init: function (config) {
        var s = this;
        extend(s, config);
    },
    /** Message prefix */
    prefix: '',
    /** Message suffix */
    suffix: '',
{{#each levels}}
    /**
     * Print {{lowercase @key}} message.
     * @param {...string} msg - Message to print.
     */
    {{lowercase @key}}: function (msg) {
        var s = this;
        s.{{#if error}}_printError{{else}}_printLog{{/if}}(s._format.apply(s, arguments), '{{color}}');
    }{{#if @last}}{{else}},{{/if}}
{{/each}}
};


module.exports = Colorprint;
